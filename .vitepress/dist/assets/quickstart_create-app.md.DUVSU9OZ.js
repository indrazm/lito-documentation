import{_ as a,c as i,a0 as e,o as t}from"./chunks/framework.CGHvQLJz.js";const c=JSON.parse('{"title":"Create Lito App","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"quickstart/create-app.md","filePath":"quickstart/create-app.md"}'),p={name:"quickstart/create-app.md"};function n(l,s,h,o,r,d){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="create-lito-app" tabindex="-1">Create Lito App <a class="header-anchor" href="#create-lito-app" aria-label="Permalink to &quot;Create Lito App&quot;">​</a></h1><div class="caution custom-block github-alert"><p class="custom-block-title">CAUTION</p><p>Currently litojs is on experimental stage. We are working on it to make it more stable and production ready.</p></div><p>To create project with lito, you can create by this command. It will create the boilerplate for you. Everything would be setuped and you are good to go!</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bunx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-lito</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp</span></span></code></pre></div><p>In project folder there is <code>apps</code> folder where you can see all the <code>app</code>. We do refer this <code>app</code> term to be a services where you can define your app.</p><h2 id="basic-app" tabindex="-1">Basic App <a class="header-anchor" href="#basic-app" aria-label="Permalink to &quot;Basic App&quot;">​</a></h2><p>In the <code>apps/main.ts</code> you would see this App defined.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { App } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litojs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  apps: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>Inside an <code>App(config)</code> you can register any app inside <code>apps</code> folder to Lito. Where all router, controller and models would be read by Lito.</p><h2 id="adding-app" tabindex="-1">Adding App <a class="header-anchor" href="#adding-app" aria-label="Permalink to &quot;Adding App&quot;">​</a></h2><p>You can add more app by creating a new folder inside <code>apps</code> folder. And then you can define your app in <code>apps/main.ts</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { App } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litojs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  apps: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="app-structure" tabindex="-1">App Structure <a class="header-anchor" href="#app-structure" aria-label="Permalink to &quot;App Structure&quot;">​</a></h2><p>Inside an app folder you can define your <code>controller</code>, <code>model</code>, <code>router</code> and <code>service</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">myapp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> models.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> router.ts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> views.tsx</span></span></code></pre></div>`,15)]))}const g=a(p,[["render",n]]);export{c as __pageData,g as default};
